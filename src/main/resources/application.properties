#Using application.yml file as configurations file

##To make custom configurations rather than the default configuration
##https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties.server
#
##Changing the port of server running
#server.port = 8082
#
###Configuration for H2 Database
###Enabling web console
##spring.h2.console.enabled=true
###Database URL - dcbapp is database name
##spring.datasource.url=jdbc:h2:mem:SimpleSpringWebAppRESTAPI
###Using h2 driver
##spring.datasource.driverClassName=org.h2.Driver
###Username and passwords
##spring.datasource.username=username
##spring.datasource.password=password
###Datasource platform
##spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
###To see database visit, http://localhost:8082/h2-console/ and login using the credentials
#
## Changing the database to MySQL
## Install MySQL and add MySQL Java Connector dependency to pom.xml
## Run server and create schema with name SimpleSpringWebAppRESTAPI from MySQL WorkBench or Shell
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/SimpleSpringWebAppRESTAPI
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.driver-class-name =com.mysql.jdbc.Driver
#spring.jpa.show-sql: true
#
## Adding custom configurations
## Simple Welcome message to display the following line and used in REST_API_Controller
#myCustomWelcomeMessage.message = Welcome to Spring Boot
#
## Creating Profiles - For example, the application has to be deployed on different servers like dev, qa, production and all other environments. For different environments we use different configurations properties, we can achieve this using Spring Profiles
#
